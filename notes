--------------------------------------------------------------------------------------------------------
                            100 DAYS OF PYTHON
--------------------------------------------------------------------------------------------------------
DAY 1:  Printing, Commenting, Debugging, String Manipulation and Variables.
--------------------------------------------------------------------------------------------------------

Print Statement: 
    print()     -   To print the statement.

String Manipulation: 
    print("a" + "b" + "c")
    print(3*"a")
    
Input Function: 
    input("A prompt for the user")
    x=input("A prompt for the user")    

Variables: 
    Naming conventions - 2variables-name is not allowed.
    
--------------------------------------------------------------------------------------------------------
DAY 2:  Printing, Commenting, Debugging, String Manipulation and Variables.
--------------------------------------------------------------------------------------------------------

Python Primitive Data Types: 

    String: 
        It is string of character. 
        "" - within quotes consider as string. 

    Integer: 
        123456789  or 123_456_789  -> This is similar to ,. python interpret without underscore. 

    Float: 
        Having decimal point value. 

    Boolean:
        It can be True or False.

    Type Error, Type Checking and Type Conversion: 
        type(name)  -   It helps to check the object type.


Mathematical Operations in Python: 

    ()      bracket 
    **      exponential 
    * /     same level, takes precedence from left to right. 
    + -     same level, takes precedence from left to right. 


Number Manipulation and F Strings: 

    round(2.6666,2)     -> 2.67 
    8 // 3              -> Floor division -> Returns integer 2.
    8 / 3               -> Returns 2.66 

    x=x+1 (or) x+=1

    f String: 
        
        It helps to convert each type to string. 

        print(f"your score is {score} {height} {isWinning}")

        message = f"your score is {score} {height} {isWinning}"
        print(message)


-------------------------------------------------------------------------------------------------------
DAY 3:  Conditional Statement, Logical Operator, Code Blocks and Scope: 
--------------------------------------------------------------------------------------------------------

Control flow with if/else and Conditional operators: 

    if <condition>:
        statements 
    else: 
        statements 
    
    >       greater than 
    <       less than 
    >=      greater than equal 
    <=      less than equal 
    ==      equal to 
    !=      not equal to 
    %       modulo - gives remainder. 


Nested If and Elif statements: 

    if condition:
        print(statement)
    elif condition: 
        print(statements) 
    else: 
        print(statement)


Multiple IF statements in Succession: 

    if <condition>:
        if <condition>:
        elif <condition>:
        else:

    else: 

        
Logical Operator: 

    and     -   check both condition  
    or      -   check or condition 
    not     -   check for not condition.

    
-------------------------------------------------------------------------------------------------------
DAY 4:  Randomisation and Python List: 
--------------------------------------------------------------------------------------------------------
    
Random Module: 

random.seed(value)  -   seed function is used to save the previous value of random function, so if executed again, same random value will be returned. 

random.randint(start,stop) - includes stop.
random.randrange(start,stop) - not include stop. 


Understanding the Offset and Appending Items to List: 

    list_variable = [value1, "value2", [value3,value4]]

    list_variable.append("value")   -   This append the value at the end of variable. 

    list_variable[-1]               -   It prints last value.

    list_variable[1] = new_value    -   To update the value. 

    list_variable.extend(["value3",""value4])     -   To append multiple values.

    a = list of values.
    y = random.choice(a)            -   choice is used to return random value from list. 


Index Errors and Working with Nested Lists: 

    Index Out of Range Error - When try to retrieve value out of list values. 
        Ex: Have 50 values, so to get as a[49]. If tried to get beyond from a[50] then get this error. 

    Nested_list = [["a","b","c"],[1,2,3]]
    Nested_list[1][2]   -   returns 3

    
--------------------------------------------------------------------------------------------------------
DAY 5: Python Loops 
--------------------------------------------------------------------------------------------------------

Using for loop with python lists: 

            for item in list_of_items: 
                Do something on each item. 

            















        


